
#ifndef __VISEVENTS_HPP__
#define __VISEVENTS_HPP__

typedef uint64_t btime_t;

class visevent{
public:

    static uint64_t vid = 0;

    str::string event_name; 
    str::string comment; 


    visevent(){ 
        vid++;
    }

};



class HostInstantVisEvent: public visevent{
public:
    uint32_t host; // id of the host . TODO: what about events generated by network?
    str::string module_name; //the name of the module which generated the event
    btime_t instanttime;
   
    LogGPBaseEvent(str::string event_name, uint32_t host, str::string module_name, btime_t time): 
    visevent(), event_name(event_name), host(host), module_name(module_name), instanttime(time)
    {
        // empty
    }
};



class HostDurationVisEvent: public visevent{
public:
    uint32_t host; // id of the host . TODO: what about events generated by network?
    str::string module_name; //the name of the module which generated the event
    btime_t stime;   // start time
    btime_t etime;   // end time
   
    LogGPBaseEvent(str::string event_name, uint32_t host, str::string module_name, btime_t stime,btime_t etime): 
    visevent(), event_name(event_name), host(host), module_name(module_name), stime(stime), etime(etime)
    {
        // empty
    }
};


class HostSimpleFlowVisEvent: public visevent{
public:
    uint32_t ihost; // id of the initiator host 
    uint32_t rhost; // id of the receiver host . 
    str::string imodule_name; //the name of the initiator module
    str::string rmodule_name; //the name of the receiver module
    btime_t stime;   // start time
    btime_t etime;   // end time
   
    LogGPBaseEvent(str::string event_name, uint32_t ihost,uint32_t rhost, str::string module_name, btime_t stime,btime_t etime): 
    visevent(), event_name(event_name), module_name(module_name), stime(stime), etime(etime)
    {
        // empty
    }
};



// define vis types
static const uint32_t VIS_HOST_INST = 1;
static const uint32_t VIS_HOST_DUR = 2;
static const uint32_t VIS_HOST_SIMPLE_FLOW = 3;
static const uint32_t VIS_HOST_COMPLEX_FLOW = 3;
 

#endif /* __VISEVENTS_HPP__ */
